# This service's specific configuration; calculate URNs, etc
# Referenced from Settings or Ros.application.config
# Values set here can be overridden using ENVs
request_logging:
  enabled: no
  provider: fluentd
  config:
    host: fluentd
    port: 24224

event_logging:
  enabled: no
  provider: fluentd
  config:
    host: fluentd
    port: 9880
    transport: http
    schemas_path: doc/schemas/cloud_events
    name: events-log
    schema_registry_url: http://kafkastack:8081

metrics:
  enabled: no
  process_stats_enabled: no
  # frequency as seconds to report metrics to prometheus_exporter
  frequency: 10

# Sets the base values for all URNs
# See app/models/concerns/ros/application_record_concern and lib/ros/core.rb Urn class
partition_name: ros
region: ''
auth_type: Basic # Internal # used by SDK to compose Authentication header

# service:
#   name: # set by the service
#   policy_name: # set by the service

# PLATFORM__EXTERNAL_CONNECTION__TYPE=host
external_connection:
  type: path

# The options for configuring internal connections to services
connection:
  type: port  # 'port' is the default connection type

  # port based means that each configured service has its own port on localhost
  # port number starts at value of 'port' and increments by 1 for each additional service
  # The port to service mapping is in alphabetical order by the service name
  # e.g. 'comm' is a lower port number than 'iam'
  port:
    scheme: http
    host: localhost
    port: 3000

  # Each service runs on port 3000 and is uniquely addressed by it's
  # host name which is taken from the module name of the Client
  # To use this connection type:
  # export PLATFORM__CONNECTION__TYPE=host
  # export PLATFORM__CONNECTION__HOST__SCHEME=https
  host:
    scheme: http
    port: 3000
    prefix: ''  # 'prefix' is prepended to each service name
    postfix: '' # 'postfix' is appended to each service name

jwt:
  # export PLATFORM__JWT__ISS=perx
  iss: ros
  alg: HS256
  valid_claims: ['sub_cognito', 'act', 'act_cognito']

# The host names to which this service responsds
# See lib/ros/core/engine.rb#platform_hosts initializer
hosts:

# TODO: get settings.yml working from spec/dummy and application so app controls CORS
cors:
  origins: '*'
  resource: '*'

postman:
  workspace: 'Rails on Services'

api_docs:
  name: ros-api
  server:
    host: http://localhost:3000

smtp:
  domain: 'example.com'
  host_name: 'localhost'
  port: 1025
  starttls_auto: true
  ssl: false
  tls: false
  from: 'no-reply@example.com'

bullet:
  blacklisted_hosts: ['candyland-dev1.uat.whistler.perxtech.io']
  environments: ['development']
