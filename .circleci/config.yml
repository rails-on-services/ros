version: 2.1
executors:
  ubuntu:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: << parameters.docker_layer_caching >>
    working_directory: ~/project
    parameters:
      docker_layer_caching:
        default: true
        type: boolean
commands:
  setup_buildkitd:
    description: Enable buildkit
    steps:
      - run:
          name: Setup buildkit environment variable
          command: |
            echo 'export DOCKER_BUILDKIT=1' >> $BASH_ENV
  docker_login:
    description: Login to dockerhub
    steps:
      - run:
          name: Login to dockerhub
          command: echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USER} --password-stdin
jobs:
  build_docker_image:
    executor: ubuntu
    steps:
      - checkout
      - setup_buildkitd
      - docker_login
      - run: 
          name: Build docker images
          command: |
            # use short commit hash as docker tag
            echo "Docker Tag: ${CIRCLE_SHA1:0:7}"
            make -j DOCKER_TAG=${CIRCLE_SHA1:0:7} build
      - run:
          name: Push docker images
          command: |
            make -j DOCKER_TAG=${CIRCLE_SHA1:0:7} push
  generate_openapi_doc:
    executor:
      name: ubuntu
      docker_layer_caching: false
    steps:
      - checkout
      - run:
          name: Pull docker images
          command: |
            repos=(railsonservices/ros-cognito railsonservices/ros-comm railsonservices/ros-iam)
            parallel docker pull {}:development-${CIRCLE_SHA1:0:7} ::: "${repos[@]}"
      - run:
          name: Bootstrap
          command: |
            echo "image_tag=development-${CIRCLE_SHA1:0:7}" > .env
            echo "RAILS_DATABASE_HOST=db" >> app.env
            echo "RAILS_DATABASE_USER=admin" >> app.env
            echo "RAILS_DATABASE_PASSWORD=admin" >> app.env
            # sleep 5 seconds because db need initializing
            docker-compose -f docker-compose.yml -f docker-compose-dev.yml run -d wait && sleep 5
      - run:
          name: Generate openapi doc
          command: |
            services=(cognito comm iam)
            for i in ${services[@]}; do
              docker-compose -f docker-compose.yml -f docker-compose-dev.yml run -u $UID $i bash -c \
              "mkdir -p tmp && bundle exec rails routes > tmp/routes.txt && bundle exec rake app:ros:doc"
            done
            # copy the generated doc to a central folder
            mkdir -p /tmp/workspace/openapi_docs
            for i in ${services[@]}; do
              find ros-${i} -name ros-api.json -exec cp {} /tmp/workspace/openapi_docs/${i}.json \;
            done
      - store_artifacts:
          path: /tmp/workspace/openapi_docs
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - openapi_docs
workflows:
  build:
    jobs:
      - build_docker_image
      - generate_openapi_doc:
          requires:
            - build_docker_image
          # filters:
          #   branches:
          #     only:
          #       - master